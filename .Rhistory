pwr.t2n.test(n1 = 20, n2= 20, d = 0.25, sig.level = 0.05)
pwr.t2n.test(n1 = 20, n2= 20, d = 0.5, sig.level = 0.05)
pwr.t2n.test(n1 = 40, n2= 40, d = 0.5, sig.level = 0.05)
8*4
pwr.t2n.test(n1 = 32, n2= 32, d = 0.5, sig.level = 0.05)
dati <- read.csv("data/sim_betadiv.csv")
View(dati)
dati <- read.csv("data/sim_betadiv.csv",sep=";")
View(dati)
dati <- read.csv("data/sim_betadiv.csv",sep=";",dec=",")
wilcox.test(betadiv ~ anno,
paired = TRUE,
alternative = "two.sided",
data = dati)
rnorm(n= 64, mean = 7, sd = 1)
bd <- rnorm(n= 64, mean = 7, sd = 1)
dati$betadiv <- bd
wilcox.test(betadiv ~ anno,
paired = TRUE,
alternative = "two.sided",
data = dati)
bd1 <- rnorm(n= 32, mean = 7, sd = 1)
bd2 <- rnorm(n= 32, mean = 20, sd = 5)
dati$betadiv <- c(bd1,bd2)
dati <- read.csv("data/sim_betadiv.csv",sep=";",dec=",")
bd1 <- rnorm(n= 32, mean = 7, sd = 1)
bd2 <- rnorm(n= 32, mean = 20, sd = 5)
dati$betadiv <- c(bd1,bd2)
wilcox.test(betadiv ~ anno,
paired = TRUE,
alternative = "two.sided",
data = dati)
dati <- read.csv("data/sim_betadiv.csv",sep=";",dec=",")
bd1 <- rnorm(n= 32, mean = 8, sd = 2)
bd2 <- rnorm(n= 32, mean = 7, sd = 1)
dati$betadiv <- c(bd1,bd2)
wilcox.test(betadiv ~ anno,
paired = TRUE,
alternative = "two.sided",
data = dati)
library(dplyr)
## chi2 - goodness of fit test
freq <- c(22, 21, 22, 27, 22, 36)
probs <- rep(1/6, 6)
chisq.test(freq, p = probs)
## chi2 - test of independence
yesbelt <- c(12813, 647, 359, 42)
nobelt <- c(65963, 4000, 2642, 303)
chisq.test(data.frame(yesbelt, nobelt))
names(chisq.test(data.frame(yesbelt, nobelt)))
data.frame(yesbelt, nobelt)
rowSums(data.frame(yesbelt, nobelt))
colSums(data.frame(yesbelt, nobelt))
# for the first cell
78776*13861/sum(data.frame(yesbelt, nobelt))
# for the whole dataframe
n = sum(data.frame(yesbelt, nobelt))
data.frame(yesbelt, nobelt) %>%
mutate(somma.riga = rowSums(data.frame(yesbelt, nobelt)),
e.yesbelt = somma.riga*sum(yesbelt)/n,
e.nobelt = somma.riga*sum(nobelt)/n)
# compare with the values calculated by R
chisq.test(data.frame(yesbelt, nobelt))$exp
data.frame(yesbelt, nobelt) %>%
mutate(somma.riga = rowSums(data.frame(yesbelt, nobelt)),
e.yesbelt = somma.riga*sum(yesbelt)/n,
e.nobelt = somma.riga*sum(nobelt)/n)
chisq.test(data.frame(yesbelt, nobelt))
names(chisq.test(data.frame(yesbelt, nobelt)))
# compare with the values calculated by R
chisq.test(data.frame(yesbelt, nobelt))$exp
data.frame(yesbelt, nobelt) %>%
mutate(somma.riga = rowSums(data.frame(yesbelt, nobelt)),
e.yesbelt = somma.riga*sum(yesbelt)/n,
e.nobelt = somma.riga*sum(nobelt)/n)
## chi2 - test of homogeneity
die.fair <- sample(1:6, 200, p=c(1,1,1,1,1,1)/6, replace = TRUE)
die.bias <- sample(1:6, 200, p=c(0.5,0.5,1,1,1,2)/6, replace = TRUE)
res.fair <- table(die.fair)
res.bias <- table(die.bias)
rbind(res.fair, res.bias)
chisq.test(rbind(res.fair, res.bias))
names(chisq.test(rbind(res.fair, res.bias)))
freq <- c(53, 22, 49)
probs <- c(5/12, 3/12, 4/12)
chisq.test(freq, p = probs)
r1 <- c(3,1)
r2 <- c(1,0)
chisq.test(data.frame(r1,r2)) -> Xsq
Xsq$observed   # observed counts (same as M)
Xsq$expected
Xsq
Xsq$observed   # observed counts (same as M)
Xsq$expected
Xsq
birds_habitats <- data.frame(
species = c("Ruby-crowed kinglet", "White-crowned sparrow", "Lincoln's sparrow",
"Golgen-crowded sparrow", "Bushtit", "Song sparrow", "Spotted towhee",
"Bewick's wren", "Hermit thrush", "Dard-eyed junco",
"Lesser goldfinch", "Uncommon"),
Remnant = c(677, 408, 270, 300, 198, 150, 137, 106, 119, 34, 57, 457),
Restored = c(198, 260, 187, 89, 91, 50, 32, 48, 24, 39, 15, 125)
)
birds_habitats
chisq.test(data.frame(birds_habitats$Remnant, birds_habitats$Restored))
# ?cars
summary(cars)
cars.lm <- lm(dist ~ speed, data = cars)
names(cars.lm)
coef(cars.lm)
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red", lwd=2)
summary(cars.lm)
-17.58 + 3.93 * (8) # point estimate
cars[5,] # real data
-17.58 + 3.93 * (8) # point estimate
cars[5,] # real data
-17.58 + 3.93 * (8) # point estimate
fitted(cars.lm)
fitted(cars.lm)
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
plot(dist ~ speed, data = cars, pch = 16)
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
fitted(cars.lm)
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
predict(cars.lm, newdata = data.frame(speed = c(6,8,21)))
predict(cars.lm, newdata = data.frame(speed = c(6,8,21)))
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
points(c(6,8,21),
predict(cars.lm, newdata = data.frame(speed = c(6,8,21))),
col="blue", pch=19)
residuals(cars.lm)
# Residual standard error
carsumry <- summary(cars.lm)
carsumry$sigma
summary(cars.lm)
carsumry$sigma
summary(cars.lm)
dim(cars)
summary(cars.lm)
confint(cars.lm)
# new <- data.frame(speed = c(5,6,21))
# predict(cars.lm, newdata = new, interval = "confidence")
# predict(cars.lm, newdata = new, interval = "prediction")
library(HH)
ci.plot(cars.lm)
# or
# library(UsingR)
# simple.lm(cars$speed, cars$dist, show.ci=TRUE)
x = c(18, 23, 25, 35, 65, 54, 34, 56, 72, 19, 23, 42, 18, 39, 37)
y = c(202, 186, 187, 180, 156, 169, 174, 172, 153, 199, 193, 174, 198, 183, 178)
lm(y ~ x) # the basic values of the regression analysis
lm.result = lm(y ~ x)
summary(lm.result)
plot(x,y, xlim=c(0,80), ylim=c(150,240)) # make a plot
abline(coef(lm.result)) #lm(y ~ x)) # plot the regression line
summary(lm.result)
b1 = -0.79773
SE = 0.06996
t = (b1-(-1))/SE # (obs. value - hyp.value)/SE
t
pt(t, 13, lower.tail = FALSE) # FIND THE RIGHT TAIL FOR THIS VALUE OF t AND 15-2 df
# multiply by 2 for a two-sided test
pt(t, 13, lower.tail = FALSE)*2 # < 0.05, REJECT H0: it is unlikely that for this data
t = (b0 - 220)/SE.b0
# COMMENTED LINES - CALCULATIONS BY HAND, YOU CAN SKIP THEM AND USE THE OUTPUT OF THE REGRESSION ANALYSIS
# SE.b0 = s*(sqrt((1/n)+(mean(x)^2/sum((x-mean(x))^2)))) # formula for the standard error of the intercept
SE.b0 = 2.86694
b0 = coef(lm.result)[[1]]
t = (b0 - 220)/SE.b0
t
pt(t, 13, lower.tail = TRUE) # FIND THE LEFT TAIL FOR THIS VALUE OF t AND 15-2 df
growth = c(12, 10, 8, 11, 6, 7, 2, 3.5, 3.5)
tannin = 0:8
lm.result <- lm(growth ~ tannin)
summary(lm.result)
lm.result <- lm(growth ~ tannin)
summary(lm.result)
plot(growth ~ tannin)
abline(coef(lm.result), lwd=2, col="red")
t = (-1.1583 - (-1.5))/0.2236
pt(t, 7, lower.tail = FALSE)
confint(lm.result)
data(cars)
cars.lm <- lm(dist ~ speed, data = cars)
coef(cars.lm)
names(cars.lm)
residuals(cars.lm)
par(mfrow=c(1,3))
hist(residuals(cars.lm))
boxplot(residuals(cars.lm))
qqnorm(residuals(cars.lm))
qqline(residuals(cars.lm))
par(mfrow=c(1,1))
plot(cars.lm)
# install.packages("lmtest")
library(lmtest)
dwtest(cars.lm, alternative = "two.sided")
library(lmtest)
bptest(cars.lm)
library(pwr)
dati <- read.csv("data/sim_betadiv.csv",sep=";",dec=",")
View(dati)
names(dati)
mod <- lm(n_specie ~ anno + cima:settore:anno, data = dati)
summary(mod)
plot_model(mod)
library(sjPlot)
plot_model(mod)
mod <- lm(n_specie ~ anno + cima*settore*anno, data = dati)
summary(mod)
mod <- lm(n_specie ~ factor(anno) + cima*settore*factor(anno), data = dati)
summary(mod)
plot_model(mod, type="eff", terms=c("factor(anno)2010"))
dati$anno <- factor(dati$anno)
mod <- lm(n_specie ~ anno + cima*settore*anno, data = dati)
summary(mod)
plot_model(mod, type="eff", terms=c("anno2010"))
plot_model(mod, type="eff", terms=c("anno"))
library(car)
library(dplyr)
library(ggcorrplot)
# Load the data
data("Boston", package = "MASS")
# Split the data into training and test set
# set.seed(123)
# training.samples <- Boston$medv %>%
#   createDataPartition(p = 0.8, list = FALSE)
# train.data  <- Boston[training.samples, ]
# test.data <- Boston[-training.samples, ]
head(Boston)
pred <- dplyr::select(Boston, crim:lstat)
names(pred)
cor.matrix <- cor(pred)
cor.matrix
ggcorrplot(cor.matrix)
ggcorrplot(cor.matrix, method = "circle")
ggcorrplot(cor.matrix, method = "circle", lab=TRUE)
p.mat <- (cor.matrix > 0.7)
p.mat
# Argument p.mat
# Barring the significant coefficients
ggcorrplot(cor.matrix,
hc.order = TRUE, method = "circle",
type = "lower", p.mat = p.mat
)
# Build the model
model1 <- lm(medv ~., data = Boston)
summary(model1)
vif(model1)
pollution <- read.table("data/sulphur.dioxide.txt", header=TRUE)
pairs(pollution,panel=panel.smooth)
library(car)
library(dplyr)
library(ggcorrplot)
# Load the data
data("Boston", package = "MASS")
# Split the data into training and test set
# set.seed(123)
# training.samples <- Boston$medv %>%
#   createDataPartition(p = 0.8, list = FALSE)
# train.data  <- Boston[training.samples, ]
# test.data <- Boston[-training.samples, ]
head(Boston)
pred <- dplyr::select(Boston, crim:lstat)
names(pred)
cor.matrix <- cor(pred)
cor.matrix
ggcorrplot(cor.matrix)
ggcorrplot(cor.matrix, method = "circle")
ggcorrplot(cor.matrix, method = "circle", lab=TRUE)
p.mat <- (cor.matrix > 0.7)
p.mat
# Argument p.mat
# Barring the significant coefficients
ggcorrplot(cor.matrix,
hc.order = TRUE, method = "circle",
type = "lower", p.mat = p.mat
)
# Build the model
model1 <- lm(medv ~., data = Boston)
summary(model1)
vif(model1)
pollution <- read.table("data/sulphur.dioxide.txt", header=TRUE)
pairs(pollution,panel=panel.smooth)
dati.mod <- read.csv("data/dati.mod.csv")
head(dati.mod)
varexpl <- dati.mod[,8:15]
head(varexpl)
hist(dati.mod$CattSiNo)
table(dati.mod$CattSiNo)
summary(varexpl)
with(dati.mod,
boxplot(Incl ~ CattSiNo, main="Slope"))
with(dati.mod,
boxplot(Alt ~ CattSiNo, main="Altitude"))
with(dati.mod,
boxplot(copveg ~ CattSiNo, main="Veg cover"))
with(dati.mod,
boxplot(NSpecie ~ CattSiNo, main="N species"))
with(dati.mod,
boxplot(media.rocce ~ CattSiNo, main="Mean diam"))
with(dati.mod,
boxplot(mediana.rocce ~ CattSiNo, main="Median diam"))
with(dati.mod,
boxplot(sd.rocce ~ CattSiNo, main="SD diam"))
with(dati.mod,
boxplot(Esp.tr ~ CattSiNo, main="Aspect"))
par(mfrow=c(1,2))
dotchart(dati.mod$sd.rocce,
ylab = "Order of observations",
xlab = "SD diam", main = "")
dotchart(dati.mod$sd.rocce,
groups = dati.mod$CattSiNo,
ylab = "CattSiNo",
xlab = "SD diam", main = "")
par(mfrow=c(1,1))
# eliminazione dell'outlier
subset(dati.mod, dati.mod$sd.rocce > 200)
dati.mod.new <- subset(dati.mod, dati.mod$sd.rocce < 200)
# trasformazione della variabile x
boxplot(dati.mod$sd.rocce)
boxplot(log(dati.mod$sd.rocce))
dati.mod.new2 <- cbind(dati.mod, logSD = log(dati.mod$sd.rocce))
dati.mod.new2 <- data.frame(dati.mod, logSD = log(dati.mod$sd.rocce))
head(dati.mod.new2)
cor(varexpl)
fm1 <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1)
hist(dati.mod.new$Ncatture)
fm1.pois <- glm(Ncatture ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=poisson, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.pois)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce, #+
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
fm2 <- glm(CattSiNo ~ #Incl +
Alt +
# copveg +
# NSpecie +
media.rocce, #+
# mediana.rocce +
# sd.rocce +
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
par(mfrow=c(1,2))
termplot(fm2, se=TRUE, col.term = "red", col.se = "grey",
ylabs = rep("odds ratio",2),
main = c("Alt","Mean diam"), cex.main = 0.7)
par(mfrow=c(1,1))
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce, #+
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
dati.mod <- read.csv("data/dati.mod.csv")
head(dati.mod)
varexpl <- dati.mod[,8:15]
head(varexpl)
hist(dati.mod$CattSiNo)
table(dati.mod$CattSiNo)
summary(varexpl)
with(dati.mod,
boxplot(Incl ~ CattSiNo, main="Slope"))
with(dati.mod,
boxplot(Alt ~ CattSiNo, main="Altitude"))
with(dati.mod,
boxplot(copveg ~ CattSiNo, main="Veg cover"))
with(dati.mod,
boxplot(NSpecie ~ CattSiNo, main="N species"))
with(dati.mod,
boxplot(media.rocce ~ CattSiNo, main="Mean diam"))
with(dati.mod,
boxplot(mediana.rocce ~ CattSiNo, main="Median diam"))
with(dati.mod,
boxplot(sd.rocce ~ CattSiNo, main="SD diam"))
with(dati.mod,
boxplot(Esp.tr ~ CattSiNo, main="Aspect"))
par(mfrow=c(1,2))
dotchart(dati.mod$sd.rocce,
ylab = "Order of observations",
xlab = "SD diam", main = "")
dotchart(dati.mod$sd.rocce,
groups = dati.mod$CattSiNo,
ylab = "CattSiNo",
xlab = "SD diam", main = "")
par(mfrow=c(1,1))
# eliminazione dell'outlier
subset(dati.mod, dati.mod$sd.rocce > 200)
dati.mod.new <- subset(dati.mod, dati.mod$sd.rocce < 200)
# trasformazione della variabile x
boxplot(dati.mod$sd.rocce)
boxplot(log(dati.mod$sd.rocce))
dati.mod.new2 <- cbind(dati.mod, logSD = log(dati.mod$sd.rocce))
dati.mod.new2 <- data.frame(dati.mod, logSD = log(dati.mod$sd.rocce))
head(dati.mod.new2)
cor(varexpl)
fm1 <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1)
hist(dati.mod.new$Ncatture)
fm1.pois <- glm(Ncatture ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=poisson, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.pois)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce, #+
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
fm2 <- glm(CattSiNo ~ #Incl +
Alt +
# copveg +
# NSpecie +
media.rocce, #+
# mediana.rocce +
# sd.rocce +
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
par(mfrow=c(1,2))
termplot(fm2, se=TRUE, col.term = "red", col.se = "grey",
ylabs = rep("odds ratio",2),
main = c("Alt","Mean diam"), cex.main = 0.7)
par(mfrow=c(1,1))
library(popbio)
logi.hist.plot(dati.mod.new$Alt,dati.mod.new$CattSiNo,boxp=FALSE,type="hist",col="gray")
logi.hist.plot(dati.mod.new$media.rocce,dati.mod.new$CattSiNo,boxp=FALSE,type="hist",col="gray")
logi.hist.plot(dati.mod.new$Esp.tr,dati.mod.new$CattSiNo,boxp=FALSE,type="hist",col="gray")
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(coef(fm2))
predict.alt <- predict(fm2, data.frame(Alt=dati.mod.new$Alt,
media.rocce=mean(dati.mod.new$media.rocce)),
type = "response")
tab <- data.frame(Alt=dati.mod.new$Alt,
prob = predict.alt)
# tab
library(dplyr)
arrange(tab, Alt)
plot(arrange(tab, Alt))
library(sjPlot)
plot_model(fm2, type = "pred")
plot_model(fm2)
