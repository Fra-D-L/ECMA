plot(dispeed, type="w")
plot(dist ~ speed, data = cars, pch = 16)
abline(cars.lm, col="red", lwd=2)
summary(cars.lm)
plot(cars.lm)
-17.58 + 3.93 * (8) # point estimate
cars[5,] # real data
cars[,3]
cars[,2]
cars[,0]
-17.58 + 3.93 * (8) # point estimate
cars[5,] # real data
fitted(cars.lm)
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
points(cars$speed, fitted(cars.lm), col="red", pch=19)
predict(cars.lm, newdata = data.frame(speed = c(0,6,8,21)))
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
points(c(6,8,21),
predict(cars.lm, newdata = data.frame(speed = c(6,8,21))),
col="blue", pch=19)
predict(cars.lm, newdata = data.frame(speed = c(0,6,8,21)))
plot(dist ~ speed, data = cars, pch = 16)
abline(coef(cars.lm), col="red")
points(cars$speed, fitted(cars.lm), col="red", pch=19)
points(c(6,8,21),
predict(cars.lm, newdata = data.frame(speed = c(6,8,21))),
col="blue", pch=19)
residuals(cars.lm)
# Residual standard error
carsumry <- summary(cars.lm)
carsumry$sigma
residuals(cars.lm)[1]
residuals(cars.lm)
residuals(cars.lm)
# Residual standard error
carsumry <- summary(cars.lm)
carsumry$sigma
carsumry
summary(cars.lm)
# new <- data.frame(speed = c(5,6,21))
# predict(cars.lm, newdata = new, interval = "confidence")
# predict(cars.lm, newdata = new, interval = "prediction")
library(HH)
ci.plot(cars.lm)
# or
# library(UsingR)
# simple.lm(cars$speed, cars$dist, show.ci=TRUE)
residuals(cars.lm)
par(mfrow=c(1,3)) #3 colonne
hist(residuals(cars.lm))
boxplot(residuals(cars.lm))
qqnorm(residuals(cars.lm))
qqline(residuals(cars.lm))
par(mfrow=c(1,1)) #reset colonne
#par(mfrow=c(1, 4))
plot(cars.lm)
#par(mfrow=c(1, 1))
par(mfrow=c(1, 4))
#par(mfrow=c(2, 2))
plot(cars.lm)
par(mfrow=c(1, 1))
#par(mfrow=c(1, 4))
par(mfrow=c(2, 2))
plot(cars.lm)
par(mfrow=c(1, 1))
#par(mfrow=c(1, 4))
par(mfrow=c(2, 2))
plot(cars.lm)
par(mfrow=c(1, 1))
# par(mfrow=c(1, 4))
# par(mfrow=c(2, 2))
plot(cars.lm)
# par(mfrow=c(1, 1))
# install.packages("lmtest")
library(lmtest)
dwtest(cars.lm, alternative = "two.sided")
cars[23,]
dim(cars)
cars[-23,]
dim(cars[-23,])
plot(cars.lm)
cars[23,]
dim(cars)
cars[-23,]
dim(cars[-23,])
plot(cars.lm)
shapiro.test(residuals(cars.lm))
data(cars)
cars.lm <- lm(dist ~ speed, data = cars)
coef(cars.lm)
names(cars.lm)
residuals(cars.lm)
par(mfrow=c(1,3)) #3 colonne
hist(residuals(cars.lm))
boxplot(residuals(cars.lm))
qqnorm(residuals(cars.lm))
qqline(residuals(cars.lm))
par(mfrow=c(1,1)) #reset colonne
# par(mfrow=c(1, 4))
# par(mfrow=c(2, 2))
plot(cars.lm)
# par(mfrow=c(1, 1))
# install.packages("lmtest")
library(lmtest)
dwtest(cars.lm, alternative = "two.sided")
cars[23,]
dim(cars)
cars[-23,]
dim(cars[-23,])
shapiro.test(residuals(cars.lm))
library(lmtest)
bptest(cars.lm)
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
plot(cars.lm)
library(lmtest)
bptest(cars.lm)
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
20*6
bctrans <- boxcox(Volume^0.31 ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume^0.31 ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans <- boxcox(Volume^0.31 ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume^0.31 ~ Height + Girth, data = trees,
lambda = seq(0.1, 1.9, length = 10))
bctrans <- boxcox(Volume^0.308 ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume^0.308 ~ Height + Girth, data = trees,
lambda = seq(0.1, 1.9, length = 10))
r()
R()
Q()
t.test()
t.test(1)
t.test(c(1, 2))
t.test(c(1, 2, 1))
t.test(c(1, 2, 2, 1))
start()
?start
start(1)
start(9)
start(9); end(9)
t.test(start(9))
t.test(start(9)+1)
start(9)+1
start(9)-end(9)
5/start(9)-end(9)
5/(start(9)-end(9))
Inf
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
boxcox(Volume ~ Height + Girth, data = trees)
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
boxcox(Volume ~ Height + Girth, data = trees)
boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
which(bctrans$y==max(bctrans$y))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
hist(trees$Volume)
hist(trees$Volume^0.31)
arrange(risultati.bc, bctrans.y)
head(risultati.bc)
plot(lm(volume ~ height+girth, dat=trees))
plot(lm(Volume ~ Height+Girth, dat=trees))
which(trees$Volume==31)
# library(tidyverse)
library(dplyr)
library(readxl)
library(HH)
library(sjPlot)
mydata <- read_excel("data/CawRidge_LifetimeData.xlsx")
ls()
mydata <- read_excel("data/CawRidge_LifetimeData.xlsx")
head(mydata)
mydata$densityYOB <- as.numeric(mydata$densityYOB)
mydata %>%
dplyr::select(densityYOB, longevity, ALR) %>%
mutate(repr = "yes") %>%
na.omit() -> mydata
knitr::opts_chunk$set(echo = TRUE)
trees$Tall <- cut(trees$Height, breaks = c(-Inf, 76, Inf),
labels = c("no", "yes"))
trees$Tall[1:5]
class(trees$Tall)
treesdummy.lm <- lm(Volume ~ Girth + Tall, data = trees)
summary(treesdummy.lm)
plot(treesdummy.lm)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
head(trees)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
head(trees)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
tall.trees
1==2
F
F-F
T-T
T*9
T+T
F+F
0.0007138<0.05
library(ggplot2)
ggplot(df, aes(Girth, Volume, color = tall)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE)
plot(9)
plot(tall.trees$Volume, small.trees$Volume)
scores.graderA = c(4,3,4,5,2,3,4,5)
scores.graderB = c(4,4,5,5,4,5,4,4)
scores.graderC = c(3,4,2,4,5,5,4,4)
scores <- c(scores.graderA,scores.graderB,scores.graderC)
graders <- c(rep("A",8), rep("B",8), rep("C",8))
scores.graders <- data.frame(graders,scores)
boxplot(scores ~ graders, data=scores.graders)
scores.graders
mod <- lm(scores ~ graders, data=scores.graders)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
trees$Tall <- cut(trees$Height, breaks = c(-Inf, 76, Inf),
labels = c("no", "yes"))
trees$Tall[1:5]
class(trees$Tall)
treesdummy.lm <- lm(Volume ~ Girth + Tall, data = trees)
summary(treesdummy.lm)
plot(treesdummy.lm)
lmtest::bptest(treesdummy.lm)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
head(trees)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
boxcox(treesdummy.lm)
library(MASS)
boxcox(treesdummy.lm)
boxcox(treesdummy.lm, lambda = seq(-2, 2, 0.1))$x[which.max(bc$y)]
boxcox(treesdummy.lm, lambda = seq(-2, 2, 0.1))$x[which.max(boxcox(treesdummy.lm, lambda = seq(-2, 2, 0.1))$y)]
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
bctrans$y %>% which.max() %>% bctrans$x[]
bctrans$x[bctrans$y %>% which.max()]
temp <- -0.02020202
q()
data("trees")
head(trees)
hist(trees$Volume)
hist(trees$Volume^2)
library(MASS)
?boxcox
bctrans <- boxcox(Volume ~ Height + Girth, data = trees)
bctrans <- boxcox(Volume ~ Height + Girth, data = trees,
lambda = seq(0, 0.5, length = 10))
bctrans
which(bctrans$y==max(bctrans$y))
bctrans$x[62]
hist(trees$Volume)
hist(trees$Volume^0.31)
max(bctrans$y)
library(dplyr)
risultati.bc <- data.frame(bctrans$y, bctrans$x)
head(risultati.bc)
arrange(risultati.bc, bctrans.y)
boxcox(treesdummy.lm)
knitr::opts_chunk$set(echo = TRUE)
trees$Tall <- cut(trees$Height, breaks = c(-Inf, 76, Inf),
labels = c("no", "yes"))
trees$Tall[1:5]
class(trees$Tall)
treesdummy.lm <- lm(Volume ~ Girth + Tall, data = trees)
summary(treesdummy.lm)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
head(trees)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
boxcox(treesdummy.lm)
boxcox(treesdummy.lm) -> temp
temp$x[temp$y %>% which.max()]
temp$x[temp$y %>% which.max()] -> lam
trees$Volume^lam
hist(trees$Volume); hist(trees$Volume^lam)
trees$Volume^lam %>% boxcox()
boxcox(trees$volume^lam)
boxcox(trees$Volume^lam)
trees
boxcox(Volume^lam, data = trees)
trees$Volume
data(PlantGrowth)
plant.df = PlantGrowth
plant.df$group = factor(plant.df$group, labels = c("Control", "Treatment 1", "Treatment 2"))
plant.df
sort_by(plant.df, weight)
view(plant.df)
library(tidyverse)
view(plant.df)
sort_by(plant.df, weight)
boxplot(plant.df)
summary(plant.df$group)
boxplot(plant.df$weight)
str(plant.df)
hist(plant.df$weight)
shapiro.test(plant.df$weight)
qqnorm(plant.df$weight); qqline(plant.df$weight)
boxplot(weight ~ group, data=plant.df)
shapiro.test(plant.df$weight)
lm(plant.df)
lm(weight ~ group, data=plant.df)
plant.lm <- lm(weight ~ group, data=plant.df)
plot(plant.lm)
type(plant.df$group)
library(tidyverse)
type(plant.df$group)
clss(plant.df$group)
class(plant.df$group)
levels(plant.df$group)
aov(plant.lm)
weight~group
prop <- weight~group
prop
plant.df$weight ~ plant.df$group
class prop
class(prop)
prop <- plant.df$weight ~ plant.df$group
aov(prop, data=trees)
plant.df$group <- relevel(plant.df$group, ref="Treatment 1")
plant.df$group
plant.df
aov(prop, data=trees) %>% summary()
aov(prop, data=trees)
bctrans$x[which.max(bctrans$y)]
weights <- read.csv("data/growth2.txt", sep="\t")
head(weights)
library(tidyverse)
factors(weights)
factor(weights)
factor(weights$diet)
factor(weights$diet) %>% unique()
factor(weights$supplement) %>% unique()
factor(weights$gain) %>% unique()
view(weights)
summary(weights)
weights$supplement <- factor(weights$supplement)
weights$diet <- factor(weights$diet)
summary(weights)
view(weights)
head(weights)
with(weights,
coplot(gain ~ diet|supplement,rows=2))
with(weights,
coplot(gain ~ diet|supplement,rows=2))
with(weights,
coplot(gain ~ diet|supplement,rows=2))
plot(gain ~ diet)
plot(gain~diet)
with(weights,
coplot(gain ~ diet|supplement,rows=2))
plot(gain~diet, data=weights)
plot(gain~supplements, data=weights)
plot(gain~supplement, data=weights)
aov(gain~diet*supplement, data = weights); aov(gain~diet+supplement, data = weights)
aov(gain~diet*supplement, data = weights)
model<-aov(gain~diet*supplement, data = weights)
summary(model)
weights$diet <- relevel(weights$diet, ref="oats")
with(weights, interaction.plot(diet,supplement, response = gain))
summary.lm(model)
summary.lm(model2)
model2 <- aov(gain~diet + supplement, data = weights)
summary(model2)
summary.lm(model2)
anova(model,model2)
TukeyHSD(model2)
plot(TukeyHSD(model2))
library(sjPlot)
# plot_model(model2, type = "diag")
plot_model(model2, type="eff")
# plot_model(model2, type = "diag")
plot_model(model2, type="eff")
data(iris)
head(iris)
fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris)
library(jtools)
plot_model(fitiris, type="int")
plot_model(fitiris, type="est")
plot_model(fitiris, type="re")
plot_model(fitiris, type="eff")
plot_model(fitiris, type="emm")
plot_model(fitiris, type="pred")
plot_model(fitiris, type="int")
plot_model(fitiris, type="std")
plot_model(fitiris, type="std2")
plot_model(fitiris, type="diag")
?`^`
?sample
sample(adulti)
sample(adulti, 20)
sample(adulti, 9)
